server:
  port: 8084
spring:
  application:
    name: order-service
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: order_group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      producer:
        #bootstrap-servers: localhost:9092
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
      data:
        redis:
          host: cex-redis
          port: 6379
  datasource:
    url: jdbc:mysql://localhost:3306/mydb?allowPublicKeyRetrieval=true&useSSL=FALSE&serverTimezone=UTC
    username: user
    password: password
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

kafka:
  topic:
    order: spot.matching.BTC-USDT.request
    orderUpdate: spot.order.order.updated
    orderstatus:
      matched: matching.order.matched
      canceled: matching.order.canceled